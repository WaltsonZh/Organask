@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap');

* {
  font-family: Poppins, sans-serif;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: none;
  outline: none;
  transition: all 0.3s;
  color: var(--text-color);
}

:root {
  --primary-color-light: #90e0ef;
  --primary-color: #005cb3;
  --highlight-color: #1fc7e9;
  --text-color: #03045e;
  --body-color: #caf0f8;
  --white-background: #ffffff;
}

body {
  background: var(--body-color);
}

body.Dark {
  --primary-color-light: #283b5a;
  --primary-color: #8e90a7;
  --highlight-color: #505e79;
  --text-color: #e0d9e0;
  --body-color: #161b3a;
  --white-background: #212535;
}

#root {
  display: flex;
  height: 100dvh;
  width: 100dvw;
}

.bx {
  font-size: 30px;
}

.remove {
  display: none;
}

.Page {
  padding: 3em;
  display: grid;
  width: 100%;
  overflow: auto;
  scrollbar-gutter: stable;
}

.Sidebar {
  background: var(--primary-color-light);
  color: var(--text-color);
  height: 100dvh;
  width: 350px;
  display: flex;
  flex-direction: column;
  padding: 2em 1em;
  white-space: nowrap;
  position: sticky;
  top: 0;
}

.Sidebar--title {
  display: flex;
  align-items: center;
  gap: 10px;
  font-size: 2em;
  font-weight: 800;
  letter-spacing: -1px;
  padding: 16px 24px;
}

.toggle {
  color: var(--primary-color-light);
  position: absolute;
  top: 56px;
  right: -14px;
  background: var(--primary-color);
  border-radius: 50%;
  cursor: pointer;
}

.Sidebar.fold {
  width: 108px;
}

.Sidebar.fold span {
  opacity: 0;
}

.Sidebar.fold .toggle {
  transform: rotate(180deg);
}

.Sidebar--menu {
  margin: 2em 0;
  display: grid;
  gap: 1em;
  grid-template-rows: repeat(auto-fill, minmax(60px, 1fr));
  height: 100%;
}

.Sidebar--label {
  display: flex;
  align-items: center;
  gap: 1em;
  height: 60px;
  border-radius: 10px;
  padding: 1.4em;
  cursor: pointer;
  color: var(--text-color);
  text-decoration: none;
  overflow: hidden;
}

.Sidebar--label span {
  font-size: 1.5em;
  font-weight: 600;
}

.Sidebar--label:hover {
  background: var(--highlight-color);
}

.current--page {
  background: var(--highlight-color);
}

.Sidebar--login {
  grid-row: -2;
}

.Sidebar--login img {
  height: 40px;
  border-radius: 50%;
  margin-left: auto;
}

.Sidebar--mode {
  grid-row: -1;
  position: relative;
  display: flex;
}

.Sidebar--mode span {
  flex-grow: 1;
}

.Sidebar--mode .mode--icon {
  position: relative;
  width: 32px;
}

.Sidebar--mode .mode--icon .bx {
  position: absolute;
  top: -16px;
}

.Sidebar--mode .mode--icon .bx-sun {
  opacity: 0;
}

body.Dark .mode--icon .bx-sun {
  opacity: 1;
}

body.Dark .mode--icon .bx-moon {
  opacity: 0;
}

.Sidebar--mode .mode--switch {
  height: 100%;
  min-width: 55px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.Sidebar.fold .mode--switch {
  transform: translateX(-177px);
}

.Sidebar--mode .switch {
  height: 30px;
  width: 60px;
  background: var(--body-color);
  border-radius: 15px;
  position: absolute;
}

.Sidebar--mode .switch::before {
  content: '';
  position: absolute;
  width: 22px;
  height: 22px;
  background: var(--primary-color);
  top: 4px;
  left: 4px;
  border-radius: 11px;
  transition: all 0.3s;
}

body.Dark .switch::before {
  left: 33px;
}

.AddTask--btn {
  position: fixed;
  right: 2em;
  bottom: 2em;
  width: 4em;
  height: 4em;
  background: var(--primary-color-light);
  display: flex;
  justify-content: center;
  align-items: center;
  text-decoration: none;
  border-radius: 50%;
  box-shadow: 0 0px 4px 3px rgba(0, 0, 0, 0.2);
}

.AddTask--btn:hover {
  background: var(--highlight-color);
}

.AddTask {
  gap: 2em;
  grid-template-rows: auto 1fr;
}

.AddTask form {
  display: flex;
  flex-direction: column;
  gap: 1.8em;
  max-width: 1000px;
  place-self: center;
}

.AddTask .head {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: 1.8em;
}

.AddTask .tasktime {
  display: grid;
  gap: 1.8em;
}

.input--box {
  position: relative;
  width: 100%;
}

.AddTask input,
.Pomodoro input,
.AddTask textarea {
  border-radius: 10px;
  outline: none;
  font-size: 1.2em;
  padding: 0 16px;
  border: 2px solid var(--primary-color);
  background: var(--body-color);
  width: 100%;
  height: 3em;
}

.AddTask .description {
  height: 250px;
}

.AddTask textarea {
  resize: none;
  padding: 16px;
  text-indent: 0;
  height: 100%;
}

.AddTask textarea::-webkit-scrollbar {
  width: 0;
}

.AddTask span,
.Pomodoro span {
  position: absolute;
  left: 16px;
  font-size: 1.2em;
  top: 14px;
  color: var(--primary-color);
  pointer-events: none;
}

.AddTask input:is(:focus, :valid) ~ span,
.Pomodoro input:is(:focus, :valid) ~ span,
.AddTask textarea:is(:focus, :valid) ~ span {
  color: var(--text-color);
  background: var(--body-color);
  transform: translate(5px, -100%);
  font-size: 0.9em;
  padding: 0 0.5em;
}

.AddTask .fullday {
  display: grid;
  display: flex;
  place-items: center;
  gap: 0.5em;
  font-size: 1.2em;
}

.AddTask .fullday label {
  padding: 2px 5px;
}

.AddTask .fullday input {
  height: 26px;
  width: 54px;
  border-radius: 14px;
  appearance: none;
  border: none;
  background: var(--primary-color-light);
  position: relative;
  cursor: pointer;
}

.AddTask .fullday input::after {
  position: absolute;
  content: '';
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: var(--primary-color);
  top: 3px;
  left: 4px;
  transition: all 0.3s;
}

.AddTask .fullday input:checked::after {
  left: 30px;
}

.AddTask .fullday .selected {
  background: var(--highlight-color);
  border-radius: 10px;
}

.AddTask button {
  grid-column: 1 / -1;
  width: 300px;
  font-size: 2em;
  color: var(--text-color);
  background: var(--primary-color-light);
  border-radius: 10px;
  cursor: pointer;
  align-self: end;
}

.AddTask button:hover {
  background: var(--highlight-color);
}

.finish {
  text-decoration: line-through;
  text-decoration-thickness: 2px;
}

.Calendar {
  grid-template-rows: repeat(auto-fill, minmax(3.6em, 1fr));
}

.Calendar .calendar--header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1em;
}

.Calendar .navigation {
  display: flex;
  gap: 1em;
}

.Calendar .bx {
  background: var(--primary-color-light);
  width: 1.2em;
  height: 1.2em;
  border-radius: 50%;
  cursor: pointer;
}

.Calendar .bx:hover {
  background: var(--highlight-color);
}

.Calendar .bx:active {
  background: var(--primary-color-light);
}

.Calendar .return {
  width: 5em;
  border-radius: 5px;
}

.Calendar .calendar--grid {
  display: grid;
  grid-template-rows: repeat(auto-fit, minmax(0, 1fr));
  width: 100%;
  grid-row: 3 / -2;
  border: var(--primary-color-light) 1px solid;
}

.Calendar .monthly--week {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
}

.Calendar .monthly--day {
  border: var(--primary-color-light) 1px solid;
  padding: 0.2em 0.5em;
  min-width: 100px;
  overflow-x: visible;
  position: relative;
}

.Calendar .monthly--day.today {
  background: var(--highlight-color);
}

.Calendar .dropdown {
  display: flex;
  align-items: center;
  justify-content: space-between;
  cursor: pointer;
}

.Calendar .dropdown:hover ~ .tasks {
  display: block;
}

.Calendar .dropdown .bx {
  background: transparent;
  font-size: 0.8em;
}

.Calendar .tasks {
  position: absolute;
  top: 3.4em;
  left: 0.5em;
  right: 0.5em;
  display: flex;
  flex-direction: column;
  gap: 0.4em;
  display: none;
  z-index: 2;
}

.Calendar .tasks:hover {
  display: block;
}

.Calendar .task {
  position: relative;
  list-style: none;
}

.Calendar .task > p {
  overflow: hidden;
  text-overflow: ellipsis;
  text-wrap: nowrap;
  font-size: 0.9em;
  background-color: var(--primary-color-light);
  cursor: pointer;
  padding: 0.2em 0.4em;
}

.Calendar .task:hover > p {
  transform: scale(1.25);
  border-radius: 5px;
  border: var(--primary-color) 1px solid;
}

.Calendar .task > p:hover + .detail {
  visibility: visible;
  opacity: 1;
}

.Calendar .detail {
  position: absolute;
  top: 48px;
  left: 50%;
  width: 250px;
  background: var(--white-background);
  border-radius: 5px;
  padding: 0.5em;
  z-index: 999;
  visibility: hidden;
  opacity: 0;
  transform: translateX(-50%);
  pointer-events: none;
}

.Calendar .detail > p {
  text-wrap: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.Calendar .detail.align-right {
  left: 7.5em;
}

.Calendar .detail.align-left {
  left: unset;
  right: -8em;
}

.Calendar .detail.align-top {
  top: -90px;
}

.Calendar .detail::after {
  position: absolute;
  content: '';
  border: 10px solid transparent;
  border-bottom-color: var(--white-background);
  top: -20px;
  left: 50%;
  transform: translateX(-50%);
}

.Calendar .detail.align-right::after {
  left: 18%;
}

.Calendar .detail.align-left::after {
  left: 82%;
}

.Calendar .detail.align-top::after {
  border-bottom: none;
  border-top-color: var(--white-background);
  top: 66px;
}

.Categories {
  grid-template-rows: repeat(auto-fill, minmax(6.4em, 1fr));
}

.Categories--task {
  display: grid;
  gap: 0.5em;
  height: fit-content;
}

.Categories--task .folder {
  background: var(--primary-color-light);
  cursor: pointer;
}

.Categories--task .folder h4 {
  font-size: 1.5em;
  font-weight: 600;
  padding: 1.2em;
  pointer-events: none;
  display: grid;
  grid-template-columns: auto 1fr auto;
  gap: 1em;
  align-items: center;
}

.Categories--task .folder h4 p {
  overflow: hidden;
  text-overflow: ellipsis;
  text-wrap: nowrap;
}

.Categories--task .bx-chevron-up {
  grid-column: -2;
}

.Categories--task .folder:hover {
  background: var(--highlight-color);
}

.Categories--task .folder.hide .tasks {
  display: none;
}

.Categories--task .folder.hide .bx-chevron-up {
  rotate: 180deg;
}

.Categories--task .task {
  background: var(--primary-color-light);
  padding: 1em 1.8em;
  display: grid;
  grid-template-columns: auto auto 1fr auto;
  align-items: center;
  gap: 2em;
}

.Categories--task .task span {
  display: flex;
  border-radius: 50%;
  padding: 0.5em;
}

.Categories--task .task span:hover {
  background: var(--primary-color-light);
  
}

.Categories--task .task h5 {
  font-size: 1.2em;
  font-weight: 600;
  max-width: 400px;
  text-wrap: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.Categories--task .task p {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
  overflow: hidden;
}

.Categories--task .task:hover {
  background: var(--highlight-color);
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.2);
}

.Categories--task .bx-trash {
  text-align: end;
  padding: 0.2em;
  border-radius: 50%;
}

.Categories--task .bx-trash:hover {
  background: var(--primary-color-light);
}

.Pomodoro {
  grid-template-rows: repeat(auto-fill, minmax(6em, 1fr));
  place-items: center;
}

.Pomodoro > h1 {
  place-self: start;
}

.Pomodoro form {
  display: flex;
  gap: 2em;
}

.PomodoroClock {
  background: var(--highlight-color);
  width: 700px;
  grid-row: span 4;
  padding: 1em;
  border-radius: 1em;
  display: grid;
  gap: 1em;
  place-content: center;
  grid-template-columns: repeat(3, 1fr);
}

.PomodoroClock .run,
.PomodoroClock h1 {
  grid-column: 1 / -1;
  display: flex;
  justify-content: center;
}

.PomodoroClock h1 {
  font-size: 6.4em;
  text-align: center;
}

.PomodoroClock .run {
  gap: 1em;
}

.PomodoroClock button {
  width: 100%;
  height: 3.2em;
  font-size: 1.2em;
  background: var(--primary-color-light);
  border-radius: 12px;
  cursor: pointer;
}

.PomodoroClock button:hover {
  background: var(--body-color);
}

.PomodoroClock button:active {
  background: var(--primary-color-light);
}

.PomodoroClock .skip {
  max-width: 60px;
  padding-top: 6px;
}

.PomodoroClock button.current {
  background: var(--body-color);
}

.Modal {
  z-index: 999;
}

.Modal .content {
  position: absolute;
  display: grid;
  gap: 0.6em;
  min-width: 400px;
  max-height: 80%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: var(--primary-color-light);
  padding: 1.2em;
  border-radius: 10px;
  cursor: auto;
  overflow: auto;
}

.Modal .content::-webkit-scrollbar {
  width: 1em;
}

.Modal .content::-webkit-scrollbar-track {
  border-radius: 10px;
}

.Modal .content::-webkit-scrollbar-thumb {
  border: 3px var(--primary-color-light) solid;
  background: var(--highlight-color);
  border-radius: 10px;
}

.Modal,
.Modal .overlay {
  width: 100vw;
  height: 100vh;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  position: fixed;
  cursor: auto;
}

.Modal .overlay {
  background: rgba(0, 0, 0, 0.4);
}

.Modal .close {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2em;
  top: 15px;
  right: 15px;
  height: 1.5em;
  width: 1.5em;
  cursor: pointer;
  border-radius: 50%;
}

.Modal .close:hover {
  background: var(--highlight-color);
}
